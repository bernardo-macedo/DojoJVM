apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.bmacedo.myapplication"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    versions = [
            appCompat       : "1.1.0-alpha03",
            coreKtx         : "1.1.0-alpha05",
            archCore        : "2.0.1",
            archRuntime     : "2.0.1",
            constraintLayout: "1.1.3",
            navigation      : "2.0.0",
            lifecycle       : "2.1.0-alpha03",
            coroutines      : "1.1.1",
            dagger          : "2.20",
            okHttp          : "3.12.1",
            retrofit        : "2.5.0",
            retrofitAdapter : "0.9.2",
            epoxy           : "3.3.0",
            lottie          : "3.0.0-beta1",
            glide           : "4.8.0",
            moshi           : "1.8.0",
            spotifySdk      : "1.1.0",
            timber          : "4.7.1",
            jUnit           : "4.12",
            mockito         : "2.23.4",
            mockitoKotlin   : "1.6.0",
            testRunner      : "1.1.0",
            espresso        : "3.2.0-alpha02",
            coreTesting     : "2.0.1",
            liveDataTesting : "1.1.0",
            fragmentTest    : "1.1.0-alpha05",
            restMock        : "0.3.2"
    ]
}

dependencies {
    // Kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // AndroidX
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "androidx.core:core-ktx:$versions.coreKtx"
    implementation "androidx.arch.core:core-common:$versions.archCore"
    implementation "androidx.arch.core:core-runtime:$versions.archRuntime"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.navigation:navigation-fragment:$versions.navigation"
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui:$versions.navigation"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okHttp"
    implementation "com.squareup.okhttp3:okhttp:$versions.okHttp"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofitAdapter"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"

    // Debugging libs
    implementation "com.jakewharton.timber:timber:$versions.timber"

    // Annotation processor libs
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

    // Unit Test
    testImplementation "junit:junit:$versions.jUnit"
    testImplementation "com.github.andrzejchm.RESTMock:android:$versions.restMock"
    testImplementation "androidx.arch.core:core-testing:$versions.coreTesting"
    testImplementation "com.jraska.livedata:testing-ktx:$versions.liveDataTesting"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "com.nhaarman:mockito-kotlin:$versions.mockitoKotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"

    // Integration Test
    androidTestImplementation "com.nhaarman:mockito-kotlin:$versions.mockitoKotlin"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"
    androidTestImplementation "androidx.fragment:fragment-testing:$versions.fragmentTest"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$versions.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$versions.espresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$versions.espresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-net:$versions.espresso"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
    androidTestImplementation "androidx.arch.core:core-testing:$versions.coreTesting"
    androidTestImplementation "androidx.test.ext:junit:$versions.testRunner"
    androidTestImplementation "androidx.test:rules:$versions.testRunner"

}
